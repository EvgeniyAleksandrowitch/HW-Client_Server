 HW
 Client_Server
 1) Клиент-серверная архитектура.
 "Клиент-сервер" - вычислительная или сетевая архитектура, в которой заданияили сетевая нагрузка распределены междупоставщиками услуг,называемыми серверами, и заказчиками услуг, называемыми клиентами. Фактически клиент и сервер-это програмное обеспечение. Обычно эти программы расоложениы на разных вычислительных машинах и взаимодействуют между собой через вычислительную сеть по средствам сетевых протоколов, но они могут быть расположены также и на одной машине. Программы-серверы ожидают от клиентских программ запросы и предоставляют им свои ресурсы в виде данных (например,передача файлов послредством HTTP,FTP,BitTorrent) или в виде сервисных функций (например, работа с элект. почтой, общение посредством систем мгновенного обмена сообщениями или просмотр web-страниц в инт.).
 Поскольку одна программа сервер может выпонять запросы от множества программ-клиентов, ее размещают на специально выделенной вычислитеьной машине, настроенной особым образом, как правило совместно с другими программами-серверами, поэтому производительность данной машины должна быть высокой. Из-за особой роли такой машины в сети, специфики ее оборудования и програмного обеспечения, еетакже называют сервером, а машины, выполняющие клиентские программы , соответственно, клиентами.
 Серверный компонент представляет функцию или услугу одному или нескольким клиентам, которые инициируют заросы на такие услуги. Серверы классифицируются по предоставляемым ими услугам. Например, веб-сервер обслуживает веб-страницы, а файловый сервер обслуживает компьютерные файлы. Совместное использование ресурсов сервера предстовляет собой услугу.
 Является ли компьютер клиентом, сервером или тем, и другим определяется характером приложения, которому требуются сервесные функции. Связь между серверами, например, для синхронизации данных, иногда называется межсерверной.
 Клиенты и серверы обмениваются соообщениями в шаблоне вопро-ответ. Обмен происходит в соответствии с определенными протоколами.
 Многоуровневая архитектура "Клиент-сервер" разновидность в которойфункция обработки данных вынесена на несколько отдельных серверов.Это позволяет разделить функции храниения, обработки и предствления данных для более эфективного использования возможностей серверов и клиентов.
 Трехуровневая архитектура-арх. модель програмного комплекса, предп. наличие в ней трех типов компонентов: клиентских приложений( с которыми работают пользователи), серверов приложений (с которыми работают работаютклиентские приложения) и серверов баз данных (с которыми работают серверы приложений).

 2) Что такое HTTP и HTTPS?
 HTTP - протокол передачи гипертекста (видео,аудио,изображений и т.д.)
 HTTPS - безопасный протокол передачи гипертекста. Это расширение протокола HTTP, поддерживающее шифрование посредством SSL и TLS.

 Чем отличаются HTTP и HTTPS?
 - HTTPS не является отдельным протоколом перелачи данных, а предстовляет собой расширение протокола HTTP с надстройкой шифрования;
 - передоваемые по протоколу HTTP не защищены, HTTPS обеспечивает защищенность путем шифрования;
 - HTTP пользует порт 80, HTTPS - порт 443.
 3) HTTP методы?
 Метод HTTP является обязательным параметром стартовой строки.Метод это тип запроса,исходя из этого типа, должно произойти действие на сервере и вернуться ответ клиенту.Название метода чаще всего короткое слово, состоящее из заглавных букв на анг.языке.
 Методы:
 - OPTIONS
 Определяет возможности и используемые методы веб-сервера. В ответном сообщении должен быть добавлен заголовок ALLow c перечислением всех поддерживаемых сервером методов.
 Может применяться для "пингования"сервера, так как результат выполнения не должен кешироваться.
 - GET 
 Запрвшивает данные конкретного ресурса, получает данные и никак не  должен эти данные менять.
 Режим используется для запуска различных процессов, при этом должен включать в тело ответного сообщения информацию о ходе выполнения.
 - HEAD
 Похож на GET, но не возвращает тело ответа, а тольтко стартовую строку и заголовки. Используется для получения методанных, а также проверки и валидации ресурса.
 Заголовки ответного собщения могут кэшироваться. Если методанные ресурса не совпадают с информацией в кэше, то копия ресурса должна быть помечана устаревшей.
 - POST
 Создает новый ресурс из переданных данных в запросе.
 Если был создан ресурс, то надо вернуть сообщение ответа с кодом состояния и загоовком, указывающим на этот ресурс.
 Если же URI не иизменился, а были созданы данные, то серверу следует вернуть ответ с кодом состояния и информацией с итогом выполнения запроса в теле сообщения.
 Часто приминяется для отправки данных на сервер из HTML заполняемых ользователями на веб-сайтах.
 - PUT
 Изменяет содержимое запроса по-указанному URI.
 Если ресурс был изменен, то возвращается сообщение ответа с кодом состояния 200 ОК или 204 No Content.
 Если ресурс, указанный в URI, не существует, то сервер создает его и вернет ответ с кодом состояния 201 Created.
 POST и PUT отличаются предназначением URI ресурсов. Используя PUT, предпологается, что загружаемый контент соответствует ресурсу,находящемуся по-указанному URI. Используя POST,предпологается, что загруженный контент будет проходить обработку на указанном URI.
 - PATCH
 Похож на PUT, но применяется только к фрагменту ресурса.
 - DELETE
 Удаляет конкретный ресурс по-указанному URI.
 Если рессурс был удален, то возвращается ответ с кодом состояния 200 ОК или 204 No Content.
 - TRACE
 Возвращает служебную отладочную информацию о том, акие данные добавляют или изменяют прокси-серверы в запросе.
 
 4) HTTP статус коды сервера?
 Код ответа  (состояния) HTTP показывает, был ли успешно выполнен определенный HTTP запрос. Коды сгрупированы в 5 классов:
 1. Информационные 100-199
 2. Успешные 200-299
 3. Перенаправленные 300-399
 4. Клиентские ошибки 400-499
 5. Серверные ошибки 500-599

 5) Что такое ядро браузера?
 Ядро браузера - совокупность HTML-падсера (компонент браузера обробатыввающий HTML), рендера ( компонент браузера подготавливающий графическое предстовление HTML-документа) и еще несколько базовых модулей, включая обработчик сценариев JAVA и JAVAScript.


 6) Какие браузеры какие ядра используют?
 Chromium ( Blink, V8)
 Firefox (движки Gecko, SpiderMonkey)
 Internet Explorer ( Trident,Chakra JAVAScript)
 (Legacy) Edge (Edge HTML, Chakra JAVAScript)


 7) Что такое API?
 API - (программный интерфейс приложения, или интерфейс программирования приложений) - специальный протокол для взаимодействия ком. программ,который позволяет использовать функцииодного приложения внутри другого.
 Это набор компонентов (классов, функций, процедур) с помощью которых ком.программа(бот или сайт) может взаимодействовать с другой программой. Обычно входит в описание каког-либо инт.-протокола, програмного каркаса, стандарта вызова функций операционный системы.
 
 8) Что такое эндпоинт?
 Эндпоин-адрес на который отправляются сообщения. Эндпоинты работают вместе с методами API. Это определенные URL-адреса, которые приложение использует для связи со стороннимислужбами и своими пользоваьелями. URL-это роутер, который может обрабатывать разные методы запроса. Каждый тип запроса - это отдельный эндпоинт.
 Эндпоинт - предстовляет собой некий шлюз, который соединяет серверные процессы приложения с внешним интерфейсом. Простыми словами, это адрес, на который отправляются сообщения.
 
 9)URL (URI,URL,URN) ?
 URL используется для указания расположения почти всех веб-ресурсов. Может обозначать путь как к веб-сайту, так и к какому-либо определенному документу или изображению. URL-адрес показан в адресной строке браузера. Структура url- адреса состоит из: протокола(HTTP/HTTPS), доменног имя сайта( в редких случаях ip-адрес),пути к странице.
 Статические адреса-остаются неизменными.
 Динамические адреса- генерируются в ответ на запросы пользователей и содержат"?","=","&".
 URI-имя и адрес ресурса в сети, включает в себя URL и URN.
 URN-имя ресурса в сети, определяет только название ресурса, но не говорит как к нему одключится.
 
 10)Идемпонентные HTTP методы?
 Идемпонентные методы (GET,HEAD,PUT,DELETE,OPTIONS,TRACE)- при повторном выполнении результаты будут ожидаемо одинаковыми.
 Метод является Идемпонентным если повторный запрос, сделанный один или несколько раз подряд, имеет один и тот же эффект не изменяющий состояние сервера.     
 
 11)Безопасные HTTP методы?
 Методы (GET,HEAD,OPTIONS) - не изменяют данные, их можно выполнить в любой последовательности

 12) Идентификация, Аутентификация, Авторизация?
    Идентификация - это процедура распознования субьекта по его идентифиатору( проще говоря, это определение имени, логина или номера).
    Аутентификация - это процедура проверки подлинности(пользователя проверяют по электронной подписи т.д.)
    Авторизация - процесс получения доступа к сайту, порталу, программе систему путем предоставления данных (часто логин и пароль) и проверки их.

 13) Что такое IP?
 IP-адрес - цифравой идентификатор, присваеваемый устройству, которое работает  в условиях публичной или локальной сети на основе стека протоколов TCP/PI. Без него невозможно существование Интернета или какой-либо внутренней IP-сети.

 14) Что такое октаты DNS?
 DNC - система доменных имен,которая обеспечивает связь между наименованием сайта и его цифровым адресом. DNS конвертирует доменное имя ресурса в адресной строке браузера в IP адрес и передает устройству.
 Структура пакета DNS:
 Heder - заголовок пакета, состоящий из 12 октет
 Question - лиент передает запрос серверу
 Ansver - сервер сообщает клиенту ответ
 Authority - содержит сведения о том, с помощью каких серверов была получина информация
 Additional - оолнительные записи, которые относятся к запросу  

 15) Что такое порт,сколько портов у Linux сервера?
 Порт - целое неотрицательное число, записываемое в заголовках протоколов транспортного уровнясетевой модели OSI(TCF,UDF,SCTF,DCCP)


 16) Уровни OSI?
 OSI - это скелет, фундамент и база всех сущностей. Модель определяет сетевые протоколы, распределяя их на 7 уровней.
 7 - уровень приложения.Тут находятся сетевые службы, которые позволяют нам как конечным пользователям, серфить просторы интернета.
 6 - уровень представления. Происходит преоброзование форматовсообщений,такое как кодирование или сжатие. Тут живут JPEG и GIF, например.
 5 - уровень сеансовый. Управляет соединениями, илисесиями. Он их разрывает. 
 4 - уровень транспортный. Обеспечивает передачу данных по сети. 
 3 - уровень сетевой. Вводится понятие "маршрутизация", и соответственно,IP-адрес. Для преоброзования IP-адрес в MAC-адрес и обратно используютпротокол ARP.
 2 - уровень канальный. Тут появляются первые идентификаторы-MAC-адреса. Они состят из 48 бит и выглядят примерно так: 00:17:65:00:1g:03
 1 - уровень физический. Передача физич.сигналов(света, тока,радио)от источника к получателю.На этом уровне мы оперируем кабелями,контактами в разьемах, кодированием едениц инулей, модуляцией и т.д.

 17) Хедеры HTTP запроса
 Хедеры HTTP - это строкки сообщений, содержащие разделенную двоеточием пару имя-значение.Формат загаловкасоответствует общему формату заголовков текстовых сетевых сообщений. Заголовки должны отделяться от тела сообщения хотя бы одной пустой строкой.
 - General Headers - должны включаться в любое сообщение клиента и сервера.
 - Request Headers - используются только в запросах клиента.
 - Response Headers - только для ответов от сервера.
 - Entity Headers - сопровождают каждую сущность сообщения.

 











